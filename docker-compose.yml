version: "3.4"
services:
  frontend:
    build: ./Frontend
    container_name: frontend
    ports:
      - 8082:8082
    depends_on:
      - auth-service
      - invite-service
      - state-service
      - import-service
    links:
      - auth-service
      - invite-service
      - state-service
      - import-service
    restart: unless-stopped
  mongo:
    build:
      context: ./Mongo
      args:
        - MONGO_IMAGE
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    restart: unless-stopped
  auth-service:
    build:
      context: ./InvestmentReporting.AuthService
      args:
        - DOTNET_IMAGE_SUFFIX
    container_name: auth-service
    ports:
      - 8083:8083
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
    - key_ring_storage:/publish/key_ring_storage
    restart: unless-stopped
  invite-service:
    build:
      context: ./InvestmentReporting.InviteService
      args:
        - DOTNET_IMAGE_SUFFIX
    container_name: invite-service
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 8084:8084
    volumes:
       - key_ring_storage:/publish/key_ring_storage
    restart: unless-stopped
  state-service:
    build:
      context: ./InvestmentReporting.StateService
      args:
        - DOTNET_IMAGE_SUFFIX
    container_name: state-service
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 8085:8085
    volumes:
      - key_ring_storage:/publish/key_ring_storage
    restart: unless-stopped
  import-service:
    build:
      context: ./InvestmentReporting.ImportService
      args:
        - DOTNET_IMAGE_SUFFIX
    container_name: import-service
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 8086:8086
    depends_on:
      - state-service
    links:
      - state-service
    volumes:
      - key_ring_storage:/publish/key_ring_storage
    restart: unless-stopped
volumes:
  key_ring_storage: